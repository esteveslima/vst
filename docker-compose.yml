version: '3.8'
services:
    
    api-container:
        build:
            context: ./api
            dockerfile: Dockerfile
        env_file:
            - ./api/.env
        restart: "no"
        ports:
            - 8000:8000

    service-container:
        build:
            context: ./service
            dockerfile: Dockerfile
        env_file:
            - ./service/.env
        restart: "no"
        ports:
            - 8001:8001

    postgres-container:                                                     # Setting up local testing environment with postgres
        image: postgres
        volumes:
           - ./.volumes/.postgres-storage:/var/lib/postgresql/data
        environment:
           - POSTGRES_USER=postgres
           - POSTGRES_PASSWORD=password
           - POSTGRES_DB=postgres-db
        restart: always
        expose:
           - '5432'
        ports:
           - '5432:5432'
    pgadmin-container:                                                       # Setting up postgres admin interface(remember to connect to container, which is in docker internal network)
        image: dpage/pgadmin4                                                # Take some time to boot up      
        volumes:           
           - ./.volumes/.pgadmin-storage/pgadmin4/servers.json:/pgadmin4/servers.json     # Bind pgadmin configs to local folder(not working)
        environment:
           - PGADMIN_DEFAULT_EMAIL=postgres@postgres.com
           - PGADMIN_DEFAULT_PASSWORD=password
           - PGADMIN_LISTEN_ADDRESS=0.0.0.0
           - PGADMIN_LISTEN_PORT=5433
        restart: always
        expose:
           - '5433'
        ports:
           - '5433:5433'                                                      # interface available at http://localhost:5433
            
    redis-container:                                                          # Setting up local testing environment with redis
        image: redis
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
           - ./.volumes/.redis-storage:/data
        #environment:
        restart: always
        expose:
           - '6379'
        ports:
           - '6379:6379'
    redis-commander-container:                                                # Setting up redis UI at http://localhost:6380/
        image: rediscommander/redis-commander:latest
        restart: "no"
        depends_on:
            - redis-container
        environment:
            - REDIS_HOSTS=`
                local:redis-container:6379:0:redispassword,
                local:redis-container:6379:1:redispassword
                `
        ports:
            - "6380:8081"