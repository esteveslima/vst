version: '3.8'
services:
    
    api-container:
        build:
            context: ./projects/api
            dockerfile: Dockerfile
        depends_on:
            - mysql-container
            - redis-container
        env_file:
            - ./projects/api/.env
        restart: "no"
        ports:
            - 8000:3000

    service-container:
        build:
            context: ./projects/service
            dockerfile: Dockerfile
        depends_on:
            - mysql-container
            - redis-container
        env_file:
            - ./projects/service/.env
        restart: "no"
        ports:
            - 8001:3001

    mysql-container:                                                          # Setting up local testing environment with mysql
        image: mysql
        volumes:
           - ./.volumes/.mysql-storage:/var/lib/mysql                                 
        environment:
        #    - MYSQL_USER=root
        #    - MYSQL_PASSWORD=password
           - MYSQL_ROOT_PASSWORD=password
           - MYSQL_DATABASE=mysql-db                            
        restart: always
        expose:
           - '3306'             
        ports:
          - '3306:3306'      
    # workbench-container:                                                      # Setting up mysql admin interface -> not working
    #     image: lscr.io/linuxserver/mysql-workbench:8.0.31
    #     container_name: mysql-workbench
    #     depends_on:
    #         - mysql-container
    #     environment:
    #         - PUID=1000
    #         - PGID=1000
    #         - TZ=Etc/UTC
    #     ports:
    #         - 3307:3000                                                       # interface available at http://localhost:3307
    #         - 3308:3001
    #     cap_add:
    #         - IPC_LOCK
    #     restart: unless-stopped
            
    redis-container:                                                          # Setting up local testing environment with redis
        image: redis
        command: ["redis-server", "--appendonly", "yes"]
        volumes:
           - ./.volumes/.redis-storage:/data
        #environment:
        restart: always
        expose:
           - '6379'
        ports:
           - '6379:6379'
    # redis-commander-container:                                                # Setting up redis UI at http://localhost:6380/
    #     image: rediscommander/redis-commander:latest
    #     restart: "no"
    #     depends_on:
    #         - redis-container
    #     environment:
    #         - REDIS_HOSTS=`
    #             local:redis-container:6379:0:redispassword,
    #             local:redis-container:6379:1:redispassword
    #             `
    #     ports:
    #         - "6380:8081"